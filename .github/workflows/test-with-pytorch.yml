name: Build test-with-pytorch

on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/test-with-pytorch.yml"
      - "test-with-pytorch/**"
  release:
    types: [created]
  workflow_dispatch:
# Environment variables available to all jobs and steps in this workflow.
env:
  REGION_ID: cn-beijing
  ACR_REGISTRY: registry.cn-beijing.aliyuncs.com
  ACR_NAMESPACE: oneflow
  DOCKER_HUB_NAMESPACE: oneflowinc

jobs:
  build-test-with-pytorch:
    name: "Build test with pytorch"
    runs-on: ubuntu-latest
    environment: production
    strategy:
      fail-fast: false
      max-parallel: 5
      matrix:
        pytorch-tag:
          [
            1.9.0-cuda10.2-cudnn7-runtime,
            1.10.0-cuda11.3-cudnn8-runtime,
            1.13.1-cuda11.6-cudnn8-runtime,
          ]
    env:
      DOCKER_REPO: test-with-pytorch-${{matrix.pytorch-tag}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login to ACR with the AccessKey pair
        uses: aliyun/acr-login@v1
        with:
          login-server: https://registry.${{env.REGION_ID}}.aliyuncs.com
          username: "${{ secrets.ACR_USERNAME }}"
          password: "${{ secrets.ACR_PASSWORD }}"
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ${{ env.DOCKER_HUB_NAMESPACE }}/${{ env.DOCKER_REPO }}:latest
            ${{ env.DOCKER_HUB_NAMESPACE }}/${{ env.DOCKER_REPO }}:${{ github.sha }}
            ${{ env.ACR_REGISTRY }}/${{ env.ACR_NAMESPACE }}/${{ env.DOCKER_REPO }}:latest
            ${{ env.ACR_REGISTRY }}/${{ env.ACR_NAMESPACE }}/${{ env.DOCKER_REPO }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.DOCKER_HUB_NAMESPACE }}/${{ env.DOCKER_REPO }}:latest
          cache-to: type=inline
          context: test-with-pytorch
          build-args: |
            PYTORCH_TAG=${{matrix.pytorch-tag}}
