name: Build test-with-pytorch

on:
  release:
    types: [created]
  workflow_dispatch:
# Environment variables available to all jobs and steps in this workflow.
env:
  REGION_ID: cn-beijing
  REGISTRY: registry.cn-beijing.aliyuncs.com
  NAMESPACE: oneflow

jobs:
  build-test-with-pytorch:
    name: "Build test with pytorch"
    runs-on: ubuntu-latest
    environment: production
    strategy:
      fail-fast: false
      max-parallel: 5
      matrix:
        pytorch-tag: [1.9.0-cuda10.2-cudnn7-runtime, 1.10.0-cuda11.3-cudnn8-runtime]
    env:
      IMAGE: test-with-pytorch-${{matrix.pytorch-tag}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # 1.1 Login to ACR
      - name: Login to ACR with the AccessKey pair
        uses: aliyun/acr-login@v1
        with:
          login-server: https://registry.${{env.REGION_ID}}.aliyuncs.com
          username: "${{ secrets.ACR_USERNAME }}"
          password: "${{ secrets.ACR_PASSWORD }}"

      # 1.2 Build and push image to ACR
      - name: Set env
        run: |
          echo ACR_TAG="$REGISTRY/$NAMESPACE/$IMAGE:${{ github.sha }}" >> $GITHUB_ENV
          echo DOCKERHUB_TAG="oneflowinc/$IMAGE:latest" >> $GITHUB_ENV
          echo DOCKERHUB_COMMIT_TAG="oneflowinc/$IMAGE:${{ github.sha }}" >> $GITHUB_ENV
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ${{ env.DOCKERHUB_TAG }}
            ${{ env.DOCKERHUB_COMMIT_TAG }}
            ${{ env.ACR_TAG }}
          cache-from: type=registry,ref=${{ env.DOCKERHUB_TAG }}
          cache-to: type=inline
          context: test-with-pytorch
          build-args: |
            PYTORCH_TAG=${{matrix.pytorch-tag}}
